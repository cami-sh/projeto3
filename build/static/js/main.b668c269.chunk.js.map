{"version":3,"sources":["Components/BeerItem/index.tsx","Components/BeerList/index.tsx","Components/Beer/index.tsx","Components/FilterItem/index.tsx","Components/FoodContainer/index.tsx","Components/Food/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BeerItem","props","beer","name","tagline","description","image_url","className","src","alt","BeerList","bebida","map","item","id","Beer","useState","beerList","setBeerList","onClick","axios","get","then","resposta","data","FilterItem","filterItem","strMeal","strMealThumb","FoodContainer","comida","idMeal","Food","categorias","setCategorias","filtro","setFiltro","filtroCategoria","setFiltroCategoria","filtroBusca","setFiltroBusca","show","setShow","useEffect","categories","meals","type","placeholder","onChange","event","target","value","strCategory","idCategory","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b668c269.chunk.js","sourcesContent":["import React from 'react'\r\nimport {PropBeerInterface} from '../../types/BeerInterface'\r\n\r\nconst BeerItem = (props:PropBeerInterface) => {\r\n\r\n    const {name, tagline, description, image_url} = props.beer\r\n\r\n    return(\r\n        <div className=\"beer\">\r\n            <img src={image_url} alt={name} />\r\n            <h3>{name}</h3>\r\n            <span>{tagline}</span>\r\n            <small>{description}</small>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default BeerItem","import React from 'react'\r\nimport BeerItem from '../BeerItem'\r\nimport {PropBeerList, BeerInterface} from '../../types/BeerInterface'\r\n\r\n\r\nconst BeerList = (props: PropBeerList) => {\r\n    return (\r\n        <div className=\"beers-list\">\r\n\r\n            {\r\n                props.bebida != null &&\r\n                props.bebida.map((item:BeerInterface) => (\r\n                    <BeerItem key={item.id} beer={item}/>\r\n            ))\r\n            }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default BeerList","import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport {BeerInterface} from '../../types/BeerInterface'\r\nimport BeerList from '../BeerList'\r\n \r\nconst Beer = () => {\r\n\r\n  const [beerList, setBeerList] = useState<BeerInterface[]>([])\r\n\r\n  const ShowBeer = () => {\r\n    axios.get('https://api.punkapi.com/v2/beers/?per_page=8')\r\n      .then(resposta => setBeerList(resposta.data))\r\n  }\r\n \r\n  return (\r\n    <div className=\"food-beer-list food-shop\">\r\n\r\n      <h1>Tipos de Cerveja</h1>\r\n      <button onClick={ShowBeer}> Buscar Cerveja</button>\r\n\r\n      <BeerList bebida={beerList}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Beer;","import React from 'react'\r\nimport {PropFilterItem} from '../../types/Filter'\r\n\r\nconst FilterItem = (props:PropFilterItem) => {\r\n\r\n    const {strMeal, strMealThumb} = props.filterItem\r\n\r\n    return (\r\n        <div className=\"food-item\">\r\n            <img src={strMealThumb} alt={strMeal} />\r\n            <p>{strMeal}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterItem","import React from 'react'\r\nimport {PropFoodContainer, Filter} from '../../types/Filter'\r\nimport FilterItem from '../FilterItem'\r\n\r\nconst FoodContainer = (props:PropFoodContainer) => {\r\n\r\n    return(\r\n        <div className=\"food-container\">\r\n\r\n            {\r\n                props.comida !== null &&\r\n                props.comida.map((item:Filter) => (\r\n                    <FilterItem key={item.idMeal} filterItem={item}/>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FoodContainer","import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Category} from \"../../types/Category\"\r\nimport {Filter} from \"../../types/Filter\"\r\nimport FoodContainer from '../FoodContainer'\r\n\r\nconst Food = () => {\r\n\r\n  const [categorias, setCategorias] = useState<Category[]>([])\r\n  const [filtro, setFiltro] = useState<Filter[]>([])\r\n  const [filtroCategoria, setFiltroCategoria] = useState<string>(\"\")\r\n  const [filtroBusca, setFiltroBusca] = useState<string>(\"\")\r\n  const [show, setShow] = useState<string>(\"\")\r\n\r\n  useEffect(() => {\r\n    axios.get('https://www.themealdb.com/api/json/v1/1/categories.php')\r\n      .then(resposta => setCategorias(resposta.data.categories))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (filtroCategoria !== \"\") {\r\n      setShow(filtroCategoria)\r\n      axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${filtroCategoria}`)\r\n        .then(resposta => setFiltro(resposta.data.meals))\r\n    }\r\n  }, [filtroCategoria])\r\n\r\n  useEffect(() => {\r\n    setShow(filtroBusca)\r\n    if (filtroBusca !== \"\") {\r\n      axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${filtroBusca}`)\r\n        .then(resposta => setFiltro(resposta.data.meals))\r\n    }else{\r\n      setFiltro([])\r\n    }\r\n  }, [filtroBusca])\r\n\r\n  return (\r\n    <div className=\"food-beer-list food-shop\">\r\n      <h1>Tipos de pratos</h1>\r\n      <p>\r\n        Selecione uma categoria ou digite a comida (em inglÃªs):\r\n        <input type=\"text\" placeholder=\"Digite a comida...\" onChange={(event) => setFiltroBusca(event.target.value)}/>\r\n      </p>\r\n\r\n      <ul>\r\n        {\r\n          categorias !== null &&\r\n          categorias.map((item:Category) => (\r\n            <li key={item.idCategory} onClick={() => setFiltroCategoria(item.strCategory)}>{item.strCategory}</li>\r\n          ))\r\n        }\r\n\r\n      </ul>\r\n      <h2>Tipo selecionado: <strong>{show}</strong></h2>\r\n      \r\n      <FoodContainer comida={filtro}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Food;","import React from 'react';\nimport './App.css';\n\nimport Beer from './Components/Beer'\nimport Food from './Components/Food'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Food />\n      <Beer />\n    </div>\n  );\n}\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}